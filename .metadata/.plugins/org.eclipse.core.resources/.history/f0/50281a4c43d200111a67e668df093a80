package com.first.google_m;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.lang.reflect.Field;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import android.R.array;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.view.Menu;

import com.first.google_m.R.drawable;
import com.google.android.maps.GeoPoint;
import com.google.android.maps.ItemizedOverlay;
import com.google.android.maps.MapActivity;
import com.google.android.maps.MapController;
import com.google.android.maps.MapView;
import com.google.android.maps.OverlayItem;
import com.google.android.maps.Overlay;
import com.google.gson.*;
public class MainActivity extends MapActivity {
    private itemOverlay itemOverlay;
    private MapView mapView;
    private List<Overlay> mapOverlays;
    private Drawable drawMarker;
    private String name;
    private String address;
    private String desc; 
    private ArrayList<Fields> lst;
    @Override
    public void onCreate(Bundle savedInstanceState) {

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mapView = (MapView) findViewById(R.id.mapview);
        mapView.setBuiltInZoomControls(true);  //줌컨트롤을 활성

        MapController mc = mapView.getController();
        mc.animateTo(new GeoPoint(37517180,127041268));
        mc.setZoom(15);

        Connect_db();

        mapOverlays= mapView.getOverlays();
        drawMarker = this.getResources().getDrawable(R.drawable.androidmarker);
        itemOverlay = new itemOverlay(drawMarker, this);

        for (int i=0;i<2;i++){
            OverlayItem item1 = new OverlayItem(new GeoPoint(lst.get(i).getAddrX(),lst.get(i).getAddrY()),lst.get(i).getContent(), lst.get(i).getTitle());      
            itemOverlay.addOverlay(item1);
            mapOverlays.add(itemOverlay);                    
        }
        /*
             OverlayItem item1 = new OverlayItem(new GeoPoint(37580716,127043176),"What args?", "Title");      
             itemOverlay.addOverlay(item1);
             mapOverlays.add(itemOverlay);                    
         */
    }

    public void Connect_db()
    {
        URL url;
        HttpURLConnection conn;
        try {
            url = new URL("http://192.168.0.60:8000/mobilemap");
            conn = (HttpURLConnection)url.openConnection();
            if(conn.getResponseCode()==HttpURLConnection.HTTP_OK){

                InputStream input = conn.getInputStream();
                Reader reader = new InputStreamReader(input);
                BufferedReader br = new BufferedReader(reader);
                String strjson ="";
                String read = null;
                while((read=br.readLine())!=null){strjson+=read;};

                Gson g = new Gson();
                JsonParser parser = new JsonParser();
                JsonArray jarray = parser.parse(strjson).getAsJsonArray();   
                int count =0;
                lst = new ArrayList<Fields>();
                for(JsonElement obj : jarray){
                    if(count>1)
                        break;
                    Fields s = g.fromJson(obj, Fields.class);
                    //System.out.println(s.fields);
                    StringTokenizer tk = new StringTokenizer(s.fields.toString(),"{,=,}",false);    

                    tk.nextToken();
                    s.setContent(tk.nextToken());
                    tk.nextToken();
                    s.setAddrX(tk.nextToken());
                    tk.nextToken();
                    s.setAddrY(tk.nextToken());
                    tk.nextToken();
                    s.setAddr(tk.nextToken());
                    tk.nextToken();
                    s.setTitle(tk.nextToken());
                    lst.add(s);
                    count++;
                }
                input.close();
                reader.close();
            }
        } catch (MalformedURLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.activity_main, menu);
        return true;
    }
    @Override
    protected boolean isRouteDisplayed() {
        return false;
    }
}
